{
	"name": "BrandDimensionUpdate",
	"properties": {
		"folder": {
			"name": "Dimension Updates"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Brand_Staging",
						"type": "DatasetReference"
					},
					"name": "BrandStagingData"
				},
				{
					"dataset": {
						"referenceName": "DimBrand",
						"type": "DatasetReference"
					},
					"name": "DimBrand"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimBrand",
						"type": "DatasetReference"
					},
					"name": "UpdateDimBrand"
				},
				{
					"dataset": {
						"referenceName": "DimBrand",
						"type": "DatasetReference"
					},
					"name": "InsertDimBrand"
				}
			],
			"transformations": [
				{
					"name": "DataSinceLastUpdate"
				},
				{
					"name": "DimNames"
				},
				{
					"name": "LookupAgainstDimTable"
				},
				{
					"name": "ExistingRows"
				},
				{
					"name": "SetToUpdate"
				},
				{
					"name": "SetIsCurrentToFalse"
				},
				{
					"name": "SetIsCurrentToTrue"
				}
			],
			"script": "parameters{\n\tLastUpdatedDate as string ('2000-01-01 00:00:00')\n}\nsource(output(\n\t\tBrandKey as string,\n\t\tGroup_Id as string,\n\t\tGroup_Hierarchy_Id as string,\n\t\tName as string,\n\t\tGroupName as string,\n\t\tlast_updated as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> BrandStagingData\nsource(output(\n\t\tBrand_Key as long,\n\t\tGroupKey as string,\n\t\tGroup_Id as string,\n\t\tGroup_Hierarchy_Id as string,\n\t\tIsCurrent as boolean,\n\t\tDateCreated as timestamp,\n\t\tName as string,\n\t\tGroupName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimBrand\nBrandStagingData filter(last_updated > toTimestamp($LastUpdatedDate,'yyyy-MM-dd HH:mm:ss')) ~> DataSinceLastUpdate\nDimBrand select(mapColumn(\n\t\tDimBrand_Key = Brand_Key,\n\t\tDimGroupKey = GroupKey,\n\t\tDimGroup_Id = Group_Id,\n\t\tDimGroup_Hierarchy_Id = Group_Hierarchy_Id,\n\t\tDimIsCurrent = IsCurrent,\n\t\tDimDateCreated = DateCreated,\n\t\tDimName = Name,\n\t\tDimGroupName = GroupName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimNames\nDataSinceLastUpdate, DimNames lookup(BrandKey == DimGroupKey,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupAgainstDimTable\nLookupAgainstDimTable filter(!isNull(DimGroupKey)) ~> ExistingRows\nSetIsCurrentToFalse alterRow(updateIf(1==1)) ~> SetToUpdate\nExistingRows derive(DimIsCurrent = false()) ~> SetIsCurrentToFalse\nDataSinceLastUpdate derive(IsCurrent = true()) ~> SetIsCurrentToTrue\nSetToUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBrand_Key as long,\n\t\tGroupKey as string,\n\t\tGroup_Id as string,\n\t\tGroup_Hierarchy_Id as string,\n\t\tIsCurrent as boolean,\n\t\tDateCreated as timestamp,\n\t\tName as string,\n\t\tGroupName as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Brand_Key'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 0,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tBrand_Key = DimBrand_Key,\n\t\tIsCurrent = DimIsCurrent\n\t)) ~> UpdateDimBrand\nSetIsCurrentToTrue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBrand_Key as long,\n\t\tGroupKey as string,\n\t\tGroup_Id as string,\n\t\tGroup_Hierarchy_Id as string,\n\t\tIsCurrent as boolean,\n\t\tDateCreated as timestamp,\n\t\tName as string,\n\t\tGroupName as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tGroupKey = BrandKey,\n\t\tGroup_Id,\n\t\tGroup_Hierarchy_Id,\n\t\tIsCurrent,\n\t\tName,\n\t\tGroupName\n\t)) ~> InsertDimBrand"
		}
	}
}