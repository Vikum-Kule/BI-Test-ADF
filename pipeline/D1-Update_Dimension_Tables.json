{
	"name": "D1-Update_Dimension_Tables",
	"properties": {
		"activities": [
			{
				"name": "LocationDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "StockledgerTrTypeDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "LocationDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"LocationStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimLocation": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimLocation": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimLocation": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Lookup Previous Staging Extract Date",
				"description": "Get penultimate extract date from staging extract log",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select \nFORMAT(max(extractDateTime),'yyyy-MM-ddTHH:mm:ssZ') as LastSuccessfulExtractDate\nfrom extractlog\nwhere extractdatetime not in (\nselect max(extractDateTime) from extractlog\nwhere extracttype = 'SalesDimension1'\nand extractresult = 'Success')\nand extracttype = 'SalesDimension1'\nand extractresult = 'Success'\n\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Brand_Staging",
						"type": "DatasetReference",
						"parameters": {
							"ConnectionStringKey": "@pipeline().parameters.StagingDBConnectionStringKey",
							"KeyVault_URL": "@pipeline().parameters.KeyVault_URL"
						}
					}
				}
			},
			{
				"name": "Create Update Log Entry",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set Last Update Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('insert UpdateLog \nvalues(getdate(),''',formatDateTime(activity('Lookup Previous Staging Extract Date').output.firstRow.LastSuccessfulExtractDate,'yyyy-MM-dd HH:mm:ss'),''',\n''SalesDimension'',\n''Started'',\ngetdate());\nselect SCOPE_IDENTITY() as logRecord')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DimLocation",
						"type": "DatasetReference",
						"parameters": {
							"ConnectionStringKey": {
								"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
								"type": "Expression"
							},
							"KeyVault_URL": {
								"value": "@pipeline().parameters.KeyVault_URL",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Set Last Update Date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup Previous Staging Extract Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "LastUpdateDate",
					"value": {
						"value": "@{convertFromUtc(activity('Lookup Previous Staging Extract Date').output.firstRow.LastSuccessfulExtractDate,'GMT Standard Time')}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Complete Update Log Entry",
				"description": "Set Extract Log Entry to Success",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "PromotionDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LoyaltySchemeTierDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "BrandDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "ReasonDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "InventoryTypeDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LocationDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SupplierProductDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "update updateLog \nset UpdateResult = 'Success',\nLastUpdatedDate = getdate()\nwhere logid = @{activity('Create Update Log Entry').output.firstRow.logRecord};\n\nselect 0 res",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DimLocation",
						"type": "DatasetReference",
						"parameters": {
							"ConnectionStringKey": {
								"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
								"type": "Expression"
							},
							"KeyVault_URL": {
								"value": "@pipeline().parameters.KeyVault_URL",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "ProductDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "StyleProductDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "ProductDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"ProductStagingDataFull": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimColour": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimMMG": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimSize": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimProductStyle": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimSupplier": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimSeason": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "CustomerDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "regroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "CustomerDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"CustomerStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimCustomer": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimCustomer": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimCustomer": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "PromotionDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "CustomerDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "PromotionDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"PromotionStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimPromotion": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimPromotion": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimPromotion": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "DateDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "regroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "DateDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"DateStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimDate": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimDate": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimDate": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						},
						"linkedServiceParameters": {
							"InsertDimDate": {
								"schemaLinkedService": {
									"ConnectionStringKey": "EnactorBI-DataWarehouseDB-ConnectionString",
									"KeyVault_URL": "https://PR-EVAL-BI-Key-Vault.vault.azure.net/"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "LoyaltySchemeTierDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "DateDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "LoyaltySchemeTierDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"LoyaltySchemeTierStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimLoyaltySchemeTier": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimLoyaltySchemeTier": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimLoyaltySchemeTier": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "MMGDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Create Update Log Entry",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "MMGDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"MMGStagingDataFull": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimMMG": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimMMG": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimMMG": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "TenderDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "regroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "TenderDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"TenderStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimTender": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimTender": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimTender": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "UserDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "regroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "UserDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"UserStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimUser": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimUser": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimUser": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "BrandDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "UserDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "BrandDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"BrandStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimBrand": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimBrand": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimBrand": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "CurrencyDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "regroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "CurrencyDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"CurrencyStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimCurrency": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimCurrency": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimCurrency": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "ReasonDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "CurrencyDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "ReasonDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"ReasonStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimReason": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimReason": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimReason": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "SizeDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Create Update Log Entry",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "SizeDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"SizeStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimSize": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimSize": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimSize": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "ColourDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Create Update Log Entry",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "ColourDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"ColourStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimColour": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimColour": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimColour": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "InventoryTypeDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "TenderDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "InventoryTypeDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"InventoryTypeStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimInventoryType": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimInventoryType": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimInventoryType": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "regroup",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "MMGDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SizeDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "ColourDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SupplierDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SeasonDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "StyleProductDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "regroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "StyleProductDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"ProductStagingDataFull": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimMMG": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimSupplier": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "StockledgerTrTypeDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "regroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "StockledgerTrTypeDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"StockledgerTrTypeStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimStockledgerTrType": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimStockledgerTrType": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimStockledgerTrType": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "SupplierDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Create Update Log Entry",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "SupplierDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'),'yyyy-MM-dd HH:mm:ss')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"SupplierStagingData": {
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								},
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								}
							},
							"DimSupplier": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimSupplier": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimSupplier": {
								"ConnectionStringKey": "EnactorBI-DataWarehouseDB-ConnectionString",
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "SeasonDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Create Update Log Entry",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "SeasonDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": "'2000-01-01 00:00:00'"
						},
						"datasetParameters": {
							"SeasonStagingData": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimSeason": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimSeason": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimSeason": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "SupplierProductDimensionUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "ProductDimensionUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "SupplierProductDimensionUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": {
								"value": "'@{formatDateTime(variables('LastUpdateDate'))}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"SupplierProductStaging": {
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								},
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								}
							},
							"DimSupplierProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimSupplier": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"UpdateDimSupplierProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimSupplierProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"StagingDBConnectionStringKey": {
				"type": "string",
				"defaultValue": "EnactorBI-StagingDB-ConnectionString"
			},
			"DataWarehouseDBConnectionStringKey": {
				"type": "string",
				"defaultValue": "EnactorBI-DataWarehouseDB-ConnectionString"
			},
			"KeyVault_URL": {
				"type": "string",
				"defaultValue": "https://PR-EVAL-BI-Key-Vault.vault.azure.net/"
			}
		},
		"variables": {
			"LastUpdateDate": {
				"type": "String"
			}
		},
		"folder": {
			"name": "StagingToDW"
		},
		"annotations": [],
		"lastPublishTime": "2022-10-03T13:48:26Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}