{
	"name": "D2-Update_Fact_Table test",
	"properties": {
		"activities": [
			{
				"name": "Lookup Last Update Date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(UpdateDateTime) as LastSuccessfulUpdateDate\nfrom UpdateLog \nwhere UpdateResult = 'Success'\nand UpdateType = 'ProductSalesFact'\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DimLocation",
						"type": "DatasetReference",
						"parameters": {
							"ConnectionStringKey": {
								"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
								"type": "Expression"
							},
							"KeyVault_URL": {
								"value": "@pipeline().parameters.KeyVault_URL",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Create Update Log Entry",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Lookup Last Update Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "insert UpdateLog \nvalues(getdate(),'ProductSalesFact','Started',getdate());\nselect SCOPE_IDENTITY() as logRecord\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DimLocation",
						"type": "DatasetReference",
						"parameters": {
							"ConnectionStringKey": {
								"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
								"type": "Expression"
							},
							"KeyVault_URL": {
								"value": "@pipeline().parameters.KeyVault_URL",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Set Last Update Date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Create Update Log Entry",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "LastUpdateDate",
					"value": {
						"value": "@{formatDateTime(activity('Lookup Last Update Date').output.firstRow.LastSuccessfulUpdateDate,'yyyy-MM-dd HH:mm:ss')}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Complete Update Log Entry",
				"description": "Set Extract Log Entry to Success",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "StockledgerTransactionsUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "update updateLog \nset UpdateResult = 'Success',\nLastUpdatedDate = getdate()\nwhere logid = @{activity('Create Update Log Entry').output.firstRow.logRecord};\n\nselect 0 res",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DimLocation",
						"type": "DatasetReference",
						"parameters": {
							"ConnectionStringKey": {
								"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
								"type": "Expression"
							},
							"KeyVault_URL": {
								"value": "@pipeline().parameters.KeyVault_URL",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "InsertMissingLocationKeys",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Set Last Update Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "InsertMissingTenderKeys",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": "'2000-01-01 00:00:00'"
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "regroup",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "InsertMissingLocationKeys",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "InsertMissingPromoKeys",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "InsertMissingPromoKeys",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Set Last Update Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "InsertMissingPromoKeys",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": "'2000-01-01 00:00:00'"
						},
						"datasetParameters": {
							"PromoSalesStagingFull": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimPromotion": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"InsertDimPromotion": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "StockledgerTransactionsUpdate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "regroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "StockledgerTransUpdate",
						"type": "DataFlowReference",
						"parameters": {
							"LastUpdatedDate": "'2000-01-01 00:00:00'"
						},
						"datasetParameters": {
							"StockledgerTransactionsStaging": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.StagingDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimLocation": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimProduct": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimStockledgerTrType": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"DimDate": {
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								},
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								}
							},
							"WriteToFactStockledgerTransactions": {
								"KeyVault_URL": {
									"value": "@pipeline().parameters.KeyVault_URL",
									"type": "Expression"
								},
								"ConnectionStringKey": {
									"value": "@pipeline().parameters.DataWarehouseDBConnectionStringKey",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"StagingDBConnectionStringKey": {
				"type": "string",
				"defaultValue": "EnactorBI-StagingDB-ConnectionString"
			},
			"DataWarehouseDBConnectionStringKey": {
				"type": "string",
				"defaultValue": "EnactorBI-DataWarehouseDB-ConnectionString"
			},
			"KeyVault_URL": {
				"type": "string",
				"defaultValue": "https://PR-EVAL-BI-Key-Vault.vault.azure.net/"
			}
		},
		"variables": {
			"LastUpdateDate": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Test"
		},
		"annotations": [],
		"lastPublishTime": "2022-02-16T12:51:48Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}